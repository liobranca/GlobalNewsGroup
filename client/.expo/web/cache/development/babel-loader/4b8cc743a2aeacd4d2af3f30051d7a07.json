{"ast":null,"code":"import React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { styles } from \"../style/SendSurvey.Style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { newConfig } from \"../../store/parameters\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConfigSurvey = function ConfigSurvey() {\n  var dispatch = useDispatch();\n  var parameters = useSelector(function (state) {\n    return state.parameters;\n  });\n\n  var _useForm = useForm({\n    defaultValues: {\n      stack: parameters.stack,\n      intervalo: parameters.intervalo\n    }\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = function onSubmit(data) {\n    dispatch(newConfig(data));\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"Cantidad de envios simultaneos\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onBlur: onBlur,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          value: value\n        });\n      },\n      name: \"stack\",\n      rules: {\n        required: true,\n        min: 1,\n        max: 100\n      }\n    }), errors.stack && _jsx(Text, {\n      style: styles.labelError,\n      children: \"Verifique nuevamente los campos.\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Intervalo de tiempo entre cada tanda (min: 1 minuto max: 59 minutos)\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            onBlur = _ref2$field.onBlur,\n            value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onBlur: onBlur,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          value: value\n        });\n      },\n      name: \"intervalo\",\n      rules: {\n        required: true,\n        min: 1,\n        max: 59\n      }\n    }), errors.intervalo && _jsx(Text, {\n      style: styles.labelError,\n      children: \"Verifique nuevamente los campos.\"\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        style: styles.buttonInner,\n        color: true,\n        title: \"Guardar configuracion\",\n        onPress: handleSubmit(onSubmit)\n      })\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Informacion adicional:\"\n      }), _jsx(Text, {\n        children: \"El servidor de correos que se esta utilizando es SendGrid API. Su plan gratuito permite un envio de 100 correos por d\\xEDa.\"\n      })]\n    })]\n  });\n};\n\nexport default ConfigSurvey;","map":{"version":3,"names":["React","useForm","Controller","styles","useDispatch","useSelector","newConfig","ConfigSurvey","dispatch","parameters","state","defaultValues","stack","intervalo","control","handleSubmit","errors","formState","onSubmit","data","label","field","onChange","onBlur","value","input","required","min","max","labelError","button","buttonInner"],"sources":["/home/lio/Escritorio/bootcampCursada/GlobalNewGroup/client/src/commons/ConfigSurvey.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Text, TextInput, View } from \"react-native\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { styles } from \"../style/SendSurvey.Style\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newConfig } from \"../../store/parameters\";\r\n\r\nconst ConfigSurvey = () => {\r\n  const dispatch = useDispatch();\r\n  const parameters = useSelector((state) => state.parameters);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      stack: parameters.stack,\r\n      intervalo: parameters.intervalo,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(newConfig(data));\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text style={styles.label}>Cantidad de envios simultaneos</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n            // defaultValue={parameters.stack}\r\n          />\r\n        )}\r\n        name=\"stack\"\r\n        rules={{ required: true, min: 1, max: 100 }}\r\n      />\r\n      {errors.stack && (\r\n        <Text style={styles.labelError}>Verifique nuevamente los campos.</Text>\r\n      )}\r\n\r\n      <Text style={styles.label}>\r\n        Intervalo de tiempo entre cada tanda (min: 1 minuto max: 59 minutos)\r\n      </Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n            // defaultValue={parameters.intervalo}\r\n          />\r\n        )}\r\n        name=\"intervalo\"\r\n        rules={{ required: true, min: 1, max: 59 }}\r\n      />\r\n      {errors.intervalo && (\r\n        <Text style={styles.labelError}>Verifique nuevamente los campos.</Text>\r\n      )}\r\n\r\n      <View style={styles.button}>\r\n        <Button\r\n          style={styles.buttonInner}\r\n          color\r\n          title=\"Guardar configuracion\"\r\n          onPress={handleSubmit(onSubmit)}\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        <Text>Informacion adicional:</Text>\r\n        <Text>\r\n          El servidor de correos que se esta utilizando es SendGrid API. Su plan\r\n          gratuito permite un envio de 100 correos por d√≠a.\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ConfigSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}