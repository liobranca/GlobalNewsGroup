{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from \"../style/Style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar StatisticSurvey = function StatisticSurvey(_ref) {\n  var route = _ref.route;\n  var id = route.params.id;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      survey = _useState2[0],\n      setSurvey = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      surveyCompleteds = _useState4[0],\n      setSurveyCompleteds = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      response = _useState6[0],\n      setResponse = _useState6[1];\n\n  useEffect(function () {\n    axios.get(\"http://localhost:8080/api/survey/single?id=\" + id).then(function (r) {\n      setSurvey(r.data);\n      setSurveyCompleteds(r.data.surveyCompleteds);\n    });\n  }, []);\n  var arrayPrueba = [];\n\n  function sW(respuesta, pregunta, type) {\n    if (type === \"desarollo_libre\") {\n      if (pregunta) {\n        return _jsx(Text, {\n          style: Styles.statiticsValue,\n          children: \"/ \" + respuesta\n        });\n      }\n    }\n\n    if (type === \"multiple_opcion\") {\n      if (pregunta) {\n        return _jsx(Text, {\n          style: Styles.statiticsValue,\n          children: \"/ \" + respuesta\n        });\n      }\n    }\n\n    if (type === \"respuesta_unica\") {\n      if (pregunta) {\n        return _jsx(Text, {\n          style: Styles.statiticsValue,\n          children: \"/ \" + respuesta\n        });\n      }\n    }\n  }\n\n  return _jsx(View, {\n    style: Styles.containerViews,\n    children: survey.name ? _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: {\n          marginLeft: \"7px\"\n        },\n        children: [_jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"Nombre:\", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: survey.name\n          })]\n        }), _jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"Creada: Fecha:\", \" \", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: survey.createdAt.slice(0, 10)\n          }), \" \", \"Hora:\", \" \", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: survey.createdAt.slice(11, 16)\n          })]\n        }), _jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"Descripci\\xF3n:\", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: survey.description\n          })]\n        }), _jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"Veces respondida:\", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: surveyCompleteds.length\n          })]\n        }), _jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"\\xBFEs anonima?:\", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: survey.isAnonymous ? \"Sí\" : \"No\"\n          })]\n        }), _jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"Cantidad de preguntas:\", _jsx(Text, {\n            style: Styles.statiticsValue,\n            children: survey.questionAndAnswer.length\n          })]\n        }), _jsxs(Text, {\n          style: Styles.statiticsKey,\n          children: [\"Tiempo de respuesta:\", _jsxs(Text, {\n            style: Styles.statiticsValue,\n            children: [survey.questionAndAnswer.length * 1.5, \" min.\"]\n          })]\n        })]\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderTopColor: \"black\",\n          paddingTop: \"7px\",\n          marginLeft: \"7px\"\n        },\n        children: survey.questionAndAnswer[0] ? survey.questionAndAnswer.map(function (question, index) {\n          return _jsxs(_Fragment, {\n            children: [_jsxs(Text, {\n              style: Styles.statiticsKey,\n              children: [\"Pregunta N\\xB0\", index + 1, \":\", _jsx(Text, {\n                style: Styles.statiticsValue,\n                children: question.Pregunta\n              })]\n            }, index), _jsxs(Text, {\n              style: Styles.statiticsKey,\n              children: [\"Respuestas:\", surveyCompleteds[0] ? surveyCompleteds.map(function (surveyCompleted) {\n                return sW(surveyCompleted.answers[question.Pregunta], question.Pregunta, question.type);\n              }) : _jsx(Text, {\n                children: \"No hay respuestas\"\n              })]\n            })]\n          });\n        }) : _jsx(Text, {\n          children: \"No hay preguntas\"\n        })\n      })]\n    }) : _jsx(Text, {\n      children: \"Cargando...\"\n    })\n  });\n};\n\nexport default StatisticSurvey;","map":{"version":3,"names":["axios","React","useState","useEffect","Styles","StatisticSurvey","route","id","params","survey","setSurvey","surveyCompleteds","setSurveyCompleteds","response","setResponse","get","then","r","data","arrayPrueba","sW","respuesta","pregunta","type","statiticsValue","containerViews","name","marginLeft","statiticsKey","createdAt","slice","description","length","isAnonymous","questionAndAnswer","borderTopWidth","borderTopColor","paddingTop","map","question","index","Pregunta","surveyCompleted","answers"],"sources":["/home/lio/Escritorio/bootcampCursada/GlobalNewGroup/client/src/commons/StatisticSurvey.jsx"],"sourcesContent":["import axios from \"axios\"\r\nimport React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport Styles from \"../style/Style\"\r\n\r\nconst StatisticSurvey = ({ route }) => {\r\n  const { id } = route.params\r\n  const [survey, setSurvey] = useState({})\r\n  const [surveyCompleteds, setSurveyCompleteds] = useState({})\r\n  const [response, setResponse] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8080/api/survey/single?id=${id}`).then((r) => {\r\n      setSurvey(r.data)\r\n      setSurveyCompleteds(r.data.surveyCompleteds)\r\n    })\r\n  }, [])\r\n\r\n  //   console.log(survey);\r\n\r\n  let arrayPrueba = []\r\n\r\n  function sW(respuesta, pregunta, type) {\r\n    if (type === \"desarollo_libre\") {\r\n      if (pregunta) {\r\n        return <Text style={Styles.statiticsValue}>{`/ ${respuesta}`}</Text>\r\n      }\r\n    }\r\n    if (type === \"multiple_opcion\") {\r\n      if (pregunta) {\r\n        return <Text style={Styles.statiticsValue}>{`/ ${respuesta}`}</Text>\r\n      }\r\n    }\r\n    if (type === \"respuesta_unica\") {\r\n      if (pregunta) {\r\n        return <Text style={Styles.statiticsValue}>{`/ ${respuesta}`}</Text>\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={Styles.containerViews}>\r\n      {survey.name ? (\r\n        <>\r\n          <View style={{ marginLeft: \"7px\" }}>\r\n            <Text style={Styles.statiticsKey}>\r\n              Nombre:\r\n              <Text style={Styles.statiticsValue}>{survey.name}</Text>\r\n            </Text>\r\n\r\n            <Text style={Styles.statiticsKey}>\r\n              Creada: Fecha:{\" \"}\r\n              <Text style={Styles.statiticsValue}>\r\n                {survey.createdAt.slice(0, 10)}\r\n              </Text>{\" \"}\r\n              Hora:{\" \"}\r\n              <Text style={Styles.statiticsValue}>\r\n                {survey.createdAt.slice(11, 16)}\r\n              </Text>\r\n            </Text>\r\n            <Text style={Styles.statiticsKey}>\r\n              Descripción:\r\n              <Text style={Styles.statiticsValue}>{survey.description}</Text>\r\n            </Text>\r\n            <Text style={Styles.statiticsKey}>\r\n              Veces respondida:\r\n              <Text style={Styles.statiticsValue}>\r\n                {surveyCompleteds.length}\r\n              </Text>\r\n            </Text>\r\n            <Text style={Styles.statiticsKey}>\r\n              ¿Es anonima?:\r\n              <Text style={Styles.statiticsValue}>\r\n                {survey.isAnonymous ? \"Sí\" : \"No\"}\r\n              </Text>\r\n            </Text>\r\n            <Text style={Styles.statiticsKey}>\r\n              Cantidad de preguntas:\r\n              <Text style={Styles.statiticsValue}>\r\n                {survey.questionAndAnswer.length}\r\n              </Text>\r\n            </Text>\r\n            <Text style={Styles.statiticsKey}>\r\n              Tiempo de respuesta:\r\n              <Text style={Styles.statiticsValue}>\r\n                {survey.questionAndAnswer.length * 1.5} min.\r\n              </Text>\r\n            </Text>\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              borderTopWidth: 1,\r\n              borderTopColor: \"black\",\r\n              paddingTop: \"7px\",\r\n              marginLeft: \"7px\",\r\n            }}\r\n          >\r\n            {survey.questionAndAnswer[0] ? (\r\n              survey.questionAndAnswer.map((question, index) => (\r\n                <>\r\n                  <Text key={index} style={Styles.statiticsKey}>\r\n                    Pregunta N°{index + 1}:\r\n                    <Text style={Styles.statiticsValue}>\r\n                      {question.Pregunta}\r\n                    </Text>\r\n                  </Text>\r\n                  <Text style={Styles.statiticsKey}>\r\n                    Respuestas:\r\n                    {surveyCompleteds[0] ? (\r\n                      surveyCompleteds.map((surveyCompleted) =>\r\n                        sW(\r\n                          surveyCompleted.answers[question.Pregunta],\r\n                          question.Pregunta,\r\n                          question.type\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <Text>No hay respuestas</Text>\r\n                    )}\r\n                  </Text>\r\n                </>\r\n              ))\r\n            ) : (\r\n              <Text>No hay preguntas</Text>\r\n            )}\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <Text>Cargando...</Text>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default StatisticSurvey\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}